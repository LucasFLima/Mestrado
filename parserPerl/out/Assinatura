module assinatura {

	path = "xxx";

	entity AssinaturaPostRequest {
		[Instancia] : nos;
		string : tipoAssinatura;
	};

	entity Instancia {
		string : nomeOrigem;
		string : id;
		string : idGlobalRemetente;
		string : nome;
		string : idOrdemBatalha;
		boolean : publicado;
		string : estado;
		string : idGlobalInstancia;
		[Pio] : pios;
		string : idGlobalOrdemBatalha;
	};

	entity PublicacaoRequest {
		string : tipoPio;
		[Pio] : pios;
		string : tipoPublicacao;
		Instancia : no;
	};

	entity Pio {
		string : nomeNoOrigem;
		string : nome;
		string : idGlobalPio;
		boolean : assinado;
		string : estado;
		[Instancia] : nos;
		string : idPio;
	};

	entity PublicacaoResponse {
		[Instancia] : nos;
		[Pio] : pios;
	};

	entity AssinaturaResponse {
		[Instancia] : nos;
		Pio : pio;
	};

	service <NomeServico> {
		path = "/assinatura/publicarPios";

		/**
		* @ summary: Obtém todos os pios/nós
		* @ params: 
		*	query t(*): Token de autenticação
		*	query idPio: O id do pio
		*	query tipoPio(*): O tipo do pio local ou remoto
		*/
		@get PublicacaoResponse <NomeCapacidade> (string t, string idPio, string tipoPio);
	}

	service <NomeServico> {
		path = "/assinatura/publicarPios";

		/**
		* @ summary: Envia/recebe a publicação de pios locais e remotos
		* @ params: 
		*	query t(*): Token de autenticação
		*	body PublicacaoRequest(*): 
		*/
		@post PublicacaoResponse <NomeCapacidade> (string t, PublicacaoRequest PublicacaoRequest);
	}

	service <NomeServico> {
		path = "/assinatura/assinarPios";

		/**
		* @ summary: Obtém todos os nós/pio
		* @ params: 
		*	query t(*): Token de autenticação
		*	query idNo: O id do nó
		*/
		@get AssinaturaResponse <NomeCapacidade> (string t, string idNo);
	}

	service <NomeServico> {
		path = "/assinatura/assinarPios";

		/**
		* @ summary: Envia/recebe assinatura
		* @ params: 
		*	query t(*): Token de autenticação
		*	body AssinaturaPostRequest(*): 
		*/
		@post AssinaturaResponse <NomeCapacidade> (string t, AssinaturaPostRequest AssinaturaPostRequest);
	}


