module anexo {

	path = "xxx";

	entity Organizacao {
		string : nome;   /*Required.*/
		string : idSuperior;   /*Required.*/
		string : id;   /*Required.*/
	};

	entity AnexoAtualizarResponse {
		string : idAnexo;   /*Required.*/
	};

	entity AnexoConteudoGetResponse {
		[] : anexos;   /*Required.*/
	};

	entity AnexoExcluir {
		string : anexos;   /*Required.*/
		string : categoria;   /* Valores possiveis: ITEM EVENTO */
	};

	entity Proxy {
		boolean : usaAutenticacao;   /*Required.*/
		boolean : naoUsaLocalmente;   /*Required.*/
		number : porta;   /*Required.*/
		Usuario : usuario;
		string : enderecosDiretos;
		string : ip;   /*Required.*/
	};

	entity Radio {
		number : porta;   /*Required.*/
	};

	entity AnexoAtualizar {
		string : codTemp;   /*Required.*/
		string : tipoAnexo;   /*Required.*/
		string : nomeAnexo;   /*Required.*/
	};

	entity Anexo {
		string : type;   /*Required.*/
		string : name;   /*Required.*/
		string : size;   /*Required.*/
	};

	entity Usuario {
		string : senha;   /*Required.*/
		string : nome;   /*Required.*/
	};

	entity ConexaoGet {
		Radio : radio;   /*Required.*/
		boolean : utilizaProxy;   /*Required.*/
		Proxy : proxy;
		Radar : radar;   /*Required.*/
	};

	entity AnexoPostResponse {
		string : ID;   /*Required.*/
	};

	entity AnexoGetResponse {
		[] : anexos;   /*Required.*/
	};

	entity Radar {
		number : porta;   /*Required.*/
		string : ip;   /*Required.*/
	};

	entity AnexoPutResponse {
		[AnexoAtualizarResponse] : anexos;
	};

	entity AnexoPutRequest {
		string : idItem;   /*Required.*/
		[AnexoAtualizar] : anexos;   /*Required.*/
	};

	entity ConexaoPut {
		Proxy : proxy;
		boolean : utilizaProxy;   /*Required.*/
	};

	service <NomeServico> {
		path = "/anexos";

		/**
		* @ summary: Envio de um arquivo para o servidor
		* @ params: 
		*	query t(*): Token de autenticação
		*	form anexo(*): Arquivo em anexo
		*/
		@post AnexoPostResponse <NomeCapacidade> (string t, file anexo);

		/**
		* @ summary: Remove um anexo
		* @ params: 
		*	query t(*): Token de autenticação
		*	body anexos(*): 
		*/
		@delete AnexoDeleteResponse <NomeCapacidade> (string t, AnexoExcluir anexos);

		/**
		* @ summary: Retorna a lista de anexos em memória
		* @ params: 
		*	query t(*): Token de autenticação
		*/
		@get AnexoGetResponse <NomeCapacidade> (string t);

		/**
		* @ summary: Persiste o anexo no servidor
		* @ params: 
		*	query t(*): Token de autenticação
		*	body Anexos(*): 
		*/
		@put AnexoPutResponse <NomeCapacidade> (string t, AnexoPutRequest Anexos);
	}

	service <NomeServico> {
		path = "/anexos/conteudo/{idItem}/{idAnexo}";

		/**
		* @ summary: Retorna o conteúdo de um arquivo
		* @ params: 
		*	query t(*): Token de autenticação
		*	path idItem(*): 
		*	path idAnexo(*): 
		*	query categoria: 
		*/
		@get AnexoConteudoGetResponse <NomeCapacidade> (string t, string idItem, string idAnexo, string categoria);
	}


