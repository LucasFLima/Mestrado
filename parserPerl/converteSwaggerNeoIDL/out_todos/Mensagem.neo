module mensagem {

	path = "xxx";

	entity MensagemFiltroRequest {
		FiltroMensagem : filtro;
	};

	entity Destinatario {
		string : idOrdemDeBatalha;   /*Required.*/
		string : nome;   /*Required.*/
	};

	entity MensagemListResponse {
		[Mensagem] : mensagens;
	};

	entity Mensagem {
		string : assunto;   /*Required.*/
		string : textoMensagem;   /*Required.*/
		string : pasta;   /*Required. Valores possiveis: ENTRADA SAIDA ENVIADAS RASCUNHOS ARQUIVADAS */
		boolean : especial;   /*Required.*/
		[string] : anexos;
		string : dataEnvio;
		[Destinatario] : destinatarios;
		boolean : lida;   /*Required.*/
		string : dataRecebimento;
		string : origem;   /*Required.*/
		string : prioridade;   /* Valores possiveis: NORMAL URGENTE URGENTISSIMO */
		string : idMensagem;
		string : classificacao;   /*Required. Valores possiveis: ULTRASECRETO SECRETO CONFIDENCIAL RESERVADO SEM_SIGILO */
		string : dataDeExpiracao;
	};

	entity MensagemRequest {
		Mensagem : mensagem;   /*Required.*/
	};

	entity FiltroMensagem {
		string : assunto;
		[string] : pastas;
		boolean : contador;
		boolean : novas;
	};

	service <NomeServico> {
		path = "/mensagens/";

		/**
		* @ summary: Envia uma nova mensagem
		* @ params: 
		*	query t(*): Token de autenticação
		*	body parametros(*): 
		*/
		@post  <NomeCapacidade> (string t, MensagemRequest parametros);

		/**
		* @ summary: Retorna uma lista de mensagens dessa instância novas ou não
		* @ params: 
		*	query t(*): Token de autenticação
		*	query novas: Flag que indica se a busca retorna somente as mensagens novas
		*	query pasta: Nome da pasta a ser buscada
		*	query offset: Indica a posição inicial de mensagens que devem ser retornadas na busca
		*	query limit: Indica o limite de mensagens que devem ser retornadas na busca
		*/
		@get MensagemListResponse <NomeCapacidade> (string t, boolean novas, string pasta, integer offset, integer limit);
	}

	service <NomeServico> {
		path = "/mensagens/{idMensagem}";

		/**
		* @ summary: Atualiza uma mensagem
		* @ params: 
		*	query t(*): Token de autenticação
		*	query marcarLida: 
		*	query pasta: 
		*	body parametros: 
		*/
		@put  <NomeCapacidade> (string t, boolean marcarLida, string pasta, MensagemRequest parametros);

		/**
		* @ summary: Deleta uma mensagem especifica
		* @ params: 
		*	query t(*): Token de autenticação
		*	query idMensagem: id da mensagem que deve ser excluída
		*/
		@delete  <NomeCapacidade> (string t, String idMensagem);

		/**
		* @ summary: Retorna uma mensagem
		* @ params: 
		*	query t(*): Token de autenticação
		*	query idMensagem: Id da mensagem a ser buscada
		*/
		@get MensagemListResponse <NomeCapacidade> (string t, string idMensagem);
	}

	service <NomeServico> {
		path = "/mensagens/receber";

		/**
		* @ summary: Atualiza uma mensagem
		* @ params: 
		*	query t(*): Token de autenticação
		*	body parametros(*): 
		*/
		@post  <NomeCapacidade> (string t, MensagemRequest parametros);
	}

	service <NomeServico> {
		path = "/mensagens/filtro";

		/**
		* @ summary: Serviço de filtro de mensagem
		* @ params: 
		*	query t(*): Token de autenticação
		*	body parametros(*): 
		*/
		@post MensagemListResponse <NomeCapacidade> (string t, MensagemFiltroRequest parametros);
	}


