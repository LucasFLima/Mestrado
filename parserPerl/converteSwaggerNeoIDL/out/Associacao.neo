module associacao {

	path = "xxx";

	entity CalcoItemPostResponse {
		string : idCalco;   /*Required.*/
		string : idItem;   /*Required.*/
	};

	entity Item {
		string : idItem;   /*Required.*/
	};

	entity DetalheFault {
		string : codigo;   /*Required.*/
		string : mensagem;   /*Required.*/
		string : causa;
	};

	entity AssociacaoItemConsulta {
		string : idItemSubj;   /*Required.*/
		string : idItemObj;   /*Required.*/
		string : codigoCategoria;   /*Required.*/
		string : idAssociacao;   /*Required.*/
		ClassificacaoConsulta : classificacao;   /*Required.*/
		string : codigoSubCategoria;   /*Required.*/
	};

	entity CalcoItemPostRequest {
		Item : item;   /*Required.*/
		string : idOrganizacaoRelatora;   /*Required.*/
		string : idUsuario;   /*Required.*/
	};

	entity ItemPutRequest {
		string : idCalcoOrigem;
		string : idCalcoDestino;   /*Required.*/
	};

	entity ClassificacaoConsulta {
		string : idClassificacao;   /*Required.*/
		long : gdh;   /*Required.*/
		string : conteudo;
		long : gdhFinal;
		string : tipoFonte;
		long : gdhInicial;
		string : fonte;
	};

	entity Fault {
		string : mensagem;   /*Required.*/
		string : codigo;   /*Required.*/
		DetalheFault : detalhe;
	};

	entity AssociacaoItensGetResponse {
		[AssociacaoItemConsulta] : associacoes;
	};

	service <NomeServico> {
		path = "/associacao/calco/{idCalco}/item";

		/**
		* @ summary: Associa um item pré-existente a um calco.
		* @ params: 
		*	query t(*): Token de autenticação
		*	path idCalco(*): Id do calco
		*	body CalcoItemAssociacao(*): Dados para associação
		*/
		@post CalcoItemPostResponse <NomeCapacidade> (string t, string idCalco, CalcoItemPostRequest CalcoItemAssociacao);
	}

	service <NomeServico> {
		path = "/associacao/calco/{idCalco}/item/{idItem}";

		/**
		* @ summary: Remove a associação entre um item e um calco.
		* @ params: 
		*	query t(*): Token de autenticação
		*	path idCalco(*): Id do calco
		*	path idItem(*): Id do item
		*/
		@delete string <NomeCapacidade> (string t, string idCalco, string idItem);
	}

	service <NomeServico> {
		path = "/associacao/item/{idItem}";

		/**
		* @ summary: Atualiza a associação de um item.
		* @ params: 
		*	query t(*): Token de autenticação
		*	path idItem(*): Id do item
		*	body ItemAssociacao(*): Dados para associação
		*/
		@put string <NomeCapacidade> (string t, string idItem, ItemPutRequest ItemAssociacao);
	}

	service <NomeServico> {
		path = "/associacao/item/{idItem}/{field}";

		/**
		* @ summary: Consulta a dados da associação entre os itens.
		* @ params: 
		*	query t(*): Token de autenticação
		*	path idItem(*): Identificador do item
		*	path field(*): Informa se o item é um objeto ou um sujeito
		*		\--> Valores possiveis: SUBJ  OBJ 
		*	query idItemRelacionado: Identificador do item relacionado
		*	query codigoCategoria: Código da categoria da associação
		*	query codigoSubCategoria: Código da subcategoria da assoicação
		*	query dataCorrente: Data corrente
		*	query dataInicio: Data de inicio da classificação
		*	query dataFim: Data de final da classificação
		* @ responseCodes: 
		*	200: Associações encontradas --Response Model: AssociacaoItensGetResponse
		*	204: Nenhuma associação encontrada
		*	500: Erro na execução do recurso --Response Model: Fault
		*	401: Autenticação negada --Response Model: Fault
		*	400: Request invalido --Response Model: Fault
		*/
		@get AssociacaoItensGetResponse <NomeCapacidade> (string t, string idItem, string field, string idItemRelacionado, string codigoCategoria, string codigoSubCategoria, long dataCorrente, long dataInicio, long dataFim);
	}


