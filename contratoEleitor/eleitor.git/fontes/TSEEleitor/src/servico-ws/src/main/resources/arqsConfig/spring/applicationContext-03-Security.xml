<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-spring-conversation:src/main/webapp/WEB-INF/applicationContext-security-http.p.vm.xml
-->
<!-- <beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" -->
<!-- 	xsi:schemaLocation=" -->
<!-- 		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd -->
<!-- 		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"> -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"	
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"
	default-autowire="byName">


	<!-- Configure Spring Security -->

	<security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled" />

	<security:http use-expressions="true" auto-config="true" access-denied-page="/errors/accessdenied.faces">

		<security:form-login 
			login-page="/pages/controleacesso/login.faces" 
			login-processing-url="/tseSecurityLoginURL" 
		    default-target-url="/home.faces" 
		    authentication-failure-url="/pages/controleacesso/login.faces?erroAutenticacao=1" 
		/>

		<security:logout logout-url="/tseSecurityLogoutURL" invalidate-session="true" logout-success-url="/home.faces" />

		<security:intercept-url pattern="/*/**" access="permitAll()" />

<!-- 		<security:intercept-url pattern="/resources/*" access="permitAll()" /> -->
<!-- 		<security:intercept-url pattern="/javax.*/**" access="permitAll()" /> -->
<!-- 		<security:intercept-url pattern="/logout*" access="isAuthenticated()" /> -->

<!-- 		<security:intercept-url pattern="/errors/*" access="permitAll()" /> -->
<!-- 		<security:intercept-url pattern="/pages/controleacesso/*" access="permitAll()" />		 -->

<!-- 		<security:intercept-url access="isAuthenticated()" pattern="/home.faces" /> -->
<!-- 		<security:intercept-url access="hasRole('PERFIL_ADMINISTRADOR')" pattern="/pages/**/*" /> -->
<!-- 		<security:intercept-url pattern="/**" access="isAuthenticated()" /> -->

<!-- 		<security:intercept-url pattern="/SOAPWebServices*/**" access="permitAll" /> -->
<!-- 		<security:intercept-url pattern="/services/**" access="permitAll" /> -->

	    <security:session-management>
        	<security:concurrency-control max-sessions="3" error-if-maximum-exceeded="true" />
    	</security:session-management>

	</security:http>

	<!-- security -->
	<security:authentication-manager>

		<security:authentication-provider>
			<security:password-encoder hash="md5" />
			<security:user-service id="userServiceEmMemoria">
				<!-- A senha é o nome do respectivo usuario -->
				<security:user name="admin1"    password="e00cf25ad42683b3df678c61f42c6bda" authorities="PERFIL_ADMINISTRADOR" />
				<security:user name="operador1" password="e00cf25ad42683b3df678c61f42c6bda" authorities="PERFIL_OPERADOR1" />
				<security:user name="operador2" password="e00cf25ad42683b3df678c61f42c6bda" authorities="PERFIL_OPERADOR2" />
				<security:user name="usuario1"  password="e00cf25ad42683b3df678c61f42c6bda" authorities="PERFIL_VISITANTE" />
				<security:user name="usuario2"  password="e00cf25ad42683b3df678c61f42c6bda" authorities="PERFIL_VISITANTE" />
			</security:user-service>
		</security:authentication-provider>

		<!-- 
		<security:authentication-provider user-service-ref="userDetailsService" />
		<security:authentication-provider ref="beanProvedorAutenticacaoEmDB-Padrao" />
		<security:authentication-provider ref="beanAutenticadorHibridoLDAP-DBProvider" />		
		--> 

		<!-- Autentica usando LDAP, neste caso, está configurado para o Active Directory do TSE -->
		<!-- 
		<security:ldap-authentication-provider 
			server-ref="ActiveDirectory-TSE"
			user-search-filter="cn={0}" 
			user-search-base="OU=Tse,DC=tse,DC=gov,DC=br"
			group-search-filter="member={0}" 
			group-search-base="OU=Tse,DC=tse,DC=gov,DC=br"
			role-prefix="PERFIL_GRUPOAD_" 
			group-role-attribute="cn"			
		>		
		</security:ldap-authentication-provider>
		-->

	</security:authentication-manager>
	

	<!-- 
	<bean id="beanAutenticadorHibridoLDAP-DBProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<constructor-arg>
			<bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<constructor-arg ref="ActiveDirectory-TSE"/>
			    <property name="userSearch" ref="beanUserSearch" />
    		</bean>
  		</constructor-arg>
  		<constructor-arg>
    		<bean id="beanProprioPopuladorAutoridadesPosLDAP" class="br.jus.tse.arqit.infocorp.controleacesso.utils.ProprioPopuladorAutoridadesPosLDAP" />
  		</constructor-arg>
	</bean>

	<bean id="beanUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<constructor-arg index="0" value="OU=Tse,DC=tse,DC=gov,DC=br" />
		<constructor-arg index="1" value="(cn={0})" />
		<constructor-arg index="2" ref="ActiveDirectory-TSE" />
		<property name="searchSubtree" value="true" />
	</bean>
 	-->

	<!-- Este eh o Active Directory do TSE -->
	<!-- 
	<security:ldap-server id="ActiveDirectory-TSE" 
		url="ldap://10.28.1.30:389/"
		root="OU=Tse,DC=tse,DC=gov,DC=br"
		manager-dn="cn=SRV_LDAP,OU=SRV_ACC,OU=Se??o de Suporte a Redes Locais - SEREDE,OU=Coordenadoria de Infra-Estrutura - COINF,OU=Secretaria de Tecnologia da Informa??o - STI,OU=Secretaria do Tribunal,OU=ANEXO I - SEDE,OU=Tse,DC=tse,DC=gov,DC=br"
		manager-password="csespe211TSE" 
	/>

	<bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />
	 -->
	 
	<!-- Encriptador de Senha  -->	
	<!-- 
	<bean id="beanEncodificadorSenhaMD5" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
	<bean id="beanEncodificadorSenhaSHA" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<property name="encodeHashAsBase64">
			<value>false</value>
		</property>
	</bean>
	<bean id="beanEncodificadorSenhaTXT" class="org.springframework.security.authentication.encoding.PlaintextPasswordEncoder">
		<property name="ignorePasswordCase">
			<value>false</value>
		</property>
	</bean>
	-->
	
	<!-- Config. de Cache de Usuários já Logados -->
	<!-- 
	<bean id="beanGerenciadorCache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
	<bean id="beanEstruturaBackendCacheUsuarios" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="beanGerenciadorCache"/>
		</property>
		<property name="cacheName">
			<value>cacheUsuarios</value>
		</property>
	</bean>
	<bean id="beanCacheUsuarios" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<property name="cache">
			<ref local="beanEstruturaBackendCacheUsuarios"/>
		</property>
	</bean>
 	-->
 	
	<!-- Provedores de Autenticação:  -->
	<!-- Provedor de Autenticação: DAO - Busca em Banco de Dados -->
	<!-- Implementador de Autenticação DAO : JDBCImpl - Padrão do Spring Security -->
	<!-- 
	<bean id="beanProprioPesquisadorUsuario" class="br.jus.tse.arqit.infocorp.controleacesso.utils.ProprioAutenticadorUsuariosEmDB" />

	<bean id="beanProvedorAutenticacaoEmDB-Padrao" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService">
			<ref local="beanProprioPesquisadorUsuario"/>
		</property>
		<property name="userCache">
			<ref local="beanCacheUsuarios"/>
		</property>
		<property name="hideUserNotFoundExceptions">
			<value>false</value>
		</property>
		<property name="passwordEncoder">
			<ref local="beanEncodificadorSenhaTXT"/>
		</property>
		<property name="saltSource">
			<ref local="beanPalavraChaveEncriptacao"/>
		</property>
	</bean>
	-->
	
</beans>
